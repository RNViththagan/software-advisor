# Workflow for building and deploying a Next.js site to GitHub Pages
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows manual trigger from Actions tab
  workflow_dispatch:

# Permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Prevent concurrent deployments from interfering
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "webapp/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
          elif [ -f "webapp/package.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
          else
            echo "Unable to determine package manager"
            exit 1
          fi


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: webapp/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('webapp/package-lock.json', 'webapp/yarn.lock') }}-${{ hashFiles('webapp/**/*.[jt]s', 'webapp/**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('webapp/package-lock.json', 'webapp/yarn.lock') }}-

      - name: Install Dependencies
        working-directory: webapp
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        working-directory: webapp
        run: ${{ steps.detect-package-manager.outputs.runner }} next build && next export

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: webapp/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
